# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
        
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: fediuni
    docker:
      - image: circleci/buildpack-deps:stretch

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  buildandtest:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.17
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Test with coverage
          command: |
            go install github.com/mattn/goveralls@latest
            go test -v -cover -race -coverprofile=./coverage.out ./...
            $(go env GOPATH | awk 'BEGIN{FS=":"} {print $1}')/bin/goveralls -coverprofile=./coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
  deploy:
    docker:
      - image: arvindr226/alpine-ssh
    steps:
      - run: ssh -oStrictHostKeyChecking=no -v $USER@$IP "./deploy.sh"
  buildimage:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build FediUni Docker Image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish:
    executor: docker-publisher
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_ACCESS_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest


workflows:
  buildanddeploy:
    jobs:
      - buildandtest:
          context: COVERALLS_TOKEN
      - buildimage:
          requires:
            - buildandtest
          filters:
            branches:
              only:
                - main
      - publish:
          requires:
            - buildimage
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - publish
          filters:
              branches:
                only:
                  - main
